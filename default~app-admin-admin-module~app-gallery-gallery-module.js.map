{"version":3,"sources":["../../../../../../src/material/tabs/ink-bar.ts","../../../../../../src/material/tabs/tab-content.ts","../../../../../../src/material/tabs/tab-label.ts","../../../../../../src/material/tabs/tab.ts","../../../../../../src/material/tabs/tabs-animations.ts","../../../../../../src/material/tabs/tab-body.ts","../../../../../../src/material/tabs/tab-config.ts","../../../../../../src/material/tabs/tab-group.ts","../../../../../../src/material/tabs/tab-label-wrapper.ts","../../../../../../src/material/tabs/paginated-tab-header.ts","../../../../../../src/material/tabs/tab-header.ts","../../../../../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts","../../../../../../src/material/tabs/tabs-module.ts","../../../../../../src/material/tabs/tab-nav-bar/index.ts","../../../../../../src/material/tabs/public-api.ts","../../../../../../src/material/tabs/index.ts"],"names":["observableOf"],"mappings":"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","file":"default~app-admin-admin-module~app-gallery-gallery-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone, Optional} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken, TemplateRef} from '@angular/core';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_TAB_CONTENT = new InjectionToken<MatTabContent>('MatTabContent');\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({\n  selector: '[matTabContent]',\n  providers: [{provide: MAT_TAB_CONTENT, useExisting: MatTabContent}],\n})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_TAB_LABEL = new InjectionToken<MatTabLabel>('MatTabLabel');\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n  providers: [{provide: MAT_TAB_LABEL, useExisting: MatTabLabel}],\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MAT_TAB_CONTENT} from './tab-content';\nimport {MAT_TAB_LABEL, MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nexport const MAT_TAB_GROUP = new InjectionToken<any>('MAT_TAB_GROUP');\n\n@Component({\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  // TODO: Remove cast once https://github.com/angular/angular/pull/37506 is available.\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MAT_TAB_LABEL as any)\n  get templateLabel(): MatTabLabel { return this._templateLabel; }\n  set templateLabel(value: MatTabLabel) {\n    // Only update the templateLabel via query if there is actually\n    // a MatTabLabel found. This works around an issue where a user may have\n    // manually set `templateLabel` during creation mode, which would then get clobbered\n    // by `undefined` when this query resolves.\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n  private _templateLabel: MatTabLabel;\n\n  // TODO: Remove cast once https://github.com/angular/angular/pull/37506 is available.\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MAT_TAB_CONTENT as any, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    @Optional() @Inject(MAT_TAB_GROUP) public _closestTabGroup?: any) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {DOCUMENT} from '@angular/common';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody,\n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    @Inject(DOCUMENT) _document?: any) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  abstract _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number | null;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(origin: number): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  }\n})\nexport class MatTabBody extends _MatTabBodyBase {\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              @Optional() dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  disablePagination?: boolean;\n\n  /**\n   * Whether the ink bar should fit its width to the size of the tab label content.\n   * This only applies to the MDC-based tabs.\n   */\n  fitInkBarToContent?: boolean;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken<MatTabsConfig>('MAT_TABS_CONFIG');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {merge, Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MAT_TAB_GROUP, MatTab} from './tab';\nimport {MAT_TABS_CONFIG, MatTabsConfig} from './tab-config';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupMixinBase =\n    mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n\ninterface MatTabGroupBaseHeader {\n  _alignInkBarToSelectedTab: () => void;\n  focusIndex: number;\n}\n\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabGroupBase extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  /**\n   * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n   * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n   */\n  abstract _allTabs: QueryList<MatTab>;\n  abstract _tabBodyWrapper: ElementRef;\n  abstract _tabHeader: MatTabGroupBaseHeader;\n\n  /** All of the tabs that belong to the group. */\n  _tabs: QueryList<MatTab> = new QueryList<MatTab>();\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n        defaultConfig.disablePagination : false;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** Listens to changes in all of the tabs. */\n  private _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes\n      .pipe(startWith(this._allTabs))\n      .subscribe((tabs: QueryList<MatTab>) => {\n        this._tabs.reset(tabs.filter(tab => {\n          // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n          // once it becomes a required parameter in MatTab.\n          return !tab._closestTabGroup || tab._closestTabGroup === this;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabGroupBaseHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  static ngAcceptInputType_dynamicHeight: BooleanInput;\n  static ngAcceptInputType_animationDuration: NumberInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  inputs: ['color', 'disableRipple'],\n  providers: [{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupBase {\n  @ContentChildren(MatTab, {descendants: true}) _allTabs: QueryList<MatTab>;\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n  @ViewChild('tabHeader') _tabHeader: MatTabGroupBaseHeader;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  NgZone,\n  Optional,\n  QueryList,\n  EventEmitter,\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n  Inject,\n  Input,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {FocusKeyManager, FocusableOption} from '@angular/cdk/a11y';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type MatPaginatedTabHeaderItem = FocusableOption & {elementRef: ElementRef};\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive()\nexport abstract class MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit,\n  AfterViewInit, OnDestroy {\n  abstract _items: QueryList<MatPaginatedTabHeaderItem>;\n  abstract _inkBar: {hide: () => void, alignToElement: (element: HTMLElement) => void};\n  abstract _tabListContainer: ElementRef<HTMLElement>;\n  abstract _tabList: ElementRef<HTMLElement>;\n  abstract _nextPaginator: ElementRef<HTMLElement>;\n  abstract _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  protected readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatPaginatedTabHeaderItem>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean = false;\n\n  /** The index of the active tab. */\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              /**\n               * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n               * parameters to become required.\n               */\n              private _platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  /** Called when the user has selected an item via the keyboard. */\n  protected abstract _itemSelected(event: KeyboardEvent): void;\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager<MatPaginatedTabHeaderItem>(this._items)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate the element dimensions.\n      Promise.resolve().then(realign);\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n          this._itemSelected(event);\n        }\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._items) { return true; }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {offsetLeft, offsetWidth} = selectedLabel.elementRef.nativeElement;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled =\n          this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._showPaginationControls = isEnabled;\n    }\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedItem = this._items && this._items.length ?\n        this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection, mouseEvent?: MouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    if (this.disablePagination) {\n      return {maxScrollDistance: 0, distance: 0};\n    }\n\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Inject,\n  Directive,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {Platform} from '@angular/cdk/platform';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements\n  AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected(event: KeyboardEvent) {\n    event.preventDefault();\n  }\n}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['selectedIndex'],\n  outputs: ['selectFocusedIndex', 'indexFocused'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderBase {\n  @ContentChildren(MatTabLabelWrapper, {descendants: false}) _items: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {BooleanInput, coerceBooleanProperty, NumberInput} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              @Optional() platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    @Optional() platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive()\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements AfterViewInit, OnDestroy,\n  CanDisable, CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link mat-focus-indicator',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tab-nav-bar';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {MatTabsModule} from './tabs-module';\nexport * from './tab-group';\nexport {MatInkBar, _MatInkBarPositioner, _MAT_INK_BAR_POSITIONER} from './ink-bar';\nexport {\n  MatTabBody,\n  _MatTabBodyBase,\n  MatTabBodyOriginState,\n  MatTabBodyPositionState,\n  MatTabBodyPortal\n} from './tab-body';\nexport {MatTabHeader, _MatTabHeaderBase} from './tab-header';\nexport {MatTabLabelWrapper} from './tab-label-wrapper';\nexport {MatTab, MAT_TAB_GROUP} from './tab';\nexport {MatTabLabel} from './tab-label';\nexport {MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase} from './tab-nav-bar/index';\nexport {MatTabContent} from './tab-content';\nexport {ScrollDirection} from './paginated-tab-header';\nexport * from './tabs-animations';\nexport {MAT_TABS_CONFIG, MatTabsConfig} from './tab-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {_MAT_INK_BAR_POSITIONER_FACTORY as Éµangular_material_src_material_tabs_tabs_a} from './ink-bar';\nexport {MatPaginatedTabHeader as Éµangular_material_src_material_tabs_tabs_d} from './paginated-tab-header';\nexport {MAT_TAB_CONTENT as Éµangular_material_src_material_tabs_tabs_c} from './tab-content';\nexport {MAT_TAB_LABEL as Éµangular_material_src_material_tabs_tabs_b} from './tab-label';"],"sourceRoot":"webpack:///"}